procedure A {
  call B;
  read only1;
  print callsB;
}

procedure B {
  read does;
  does = nothing;
  print slack;
}

procedure C {
  if (x != y) then {
    call D;
    print callsD; }
  else {
    call E;
    print callsE; }
  read multiCall;
}

procedure D {
  read oneto1;
  while (oneto1 != one21) {
    oneto1 = oneto1 + 1;
    call E; }
  print callsE;
}

procedure E {
  read multiCalled;
  while (sky == blue) {
    while (rain != acid) {
      call G; }
    print callsG; }
}

procedure F {
  task = nothing;
  print do;
  print nothing;
}

procedure G {
  step1 = gather;
  step2 = plan;
  step3 = unknown;
  step4 = profit;
}

procedure H {
  read multiCall;
  while (testing <= coverage) {
    continue = die;
    if (theory == correct) then {
      call G;
      print callsG; }
    else {
      nothing = yes; }
    call E;
    print callsE; }
}

procedure I {
  while (1 == 1) {
    call H;
    print callsH; }
}

procedure J {
  apple = orange;
  if (this == padding) then {
    read text; }
  else {
    read line; }
  print callsH;
  call H;
}