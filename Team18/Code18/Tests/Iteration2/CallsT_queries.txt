1 - Set 1 - Test syntax of calls*. Calls* syntax, LHS synonym RHS synonym
procedure pr, pr1;
Select pr such that Calls*(pr, pr1)
A, C, D, E, H, I, J
5000
2 - Calls* syntax, LHS invalid synonym RHS synonym
procedure pr; stmt s;
Select pr such that Calls*(s, pr)
none
5000
3 - Calls* syntax, LHS synonym RHS invalid synonym
procedure pr; assign a;
Select pr such that Calls*(pr, a)
none
5000
4 - Calls* syntax, LHS invalid synonym RHS invalid synonym
print pn; variable v;
Select pn such that Calls*(pn, v)
none
5000
5 - Calls* syntax, LHS synonym RHS wildcard
procedure procedure;
Select procedure such that Calls*(procedure, _)
A, C, D, E, H, I, J
5000
6 - Calls* syntax, LHS wildcard RHS synonym
procedure procedure;
Select procedure such that Calls*(_, procedure)
B, D, E, G, H
5000
7 - Calls*, syntax, LHS wildcard RHS wildcard
procedure Calls;
Select Calls such that Calls*(_, _)
A, B, C, D, E, F, G, H, I, J
5000
8 - Calls* syntax, LHS synonym RHS Ident
procedure pr;
Select pr such that Calls*(pr, "E")
C, D, H, I, J
5000
9 - Calls* syntax, LHS synonym RHS invalid Ident
procedure pr;
Select pr such that Calls*(pr, "K")
none
5000
10 - Calls* syntax, LHS Ident RHS synonym
procedure pr;
Select pr such that Calls*("C", pr)
D, E, G
5000
11 - Calls* syntax, LHS invalid Ident RHS synonym
procedure pr;
Select pr such that Calls*("A1", pr)
none
5000
12 - Calls* syntax, LHS Ident RHS Ident
procedure pr;
Select pr such that Calls*("A", "B")
A, B, C, D, E, F, G, H, I, J
5000
13 - Calls* syntax, LHS invalid Ident RHS Ident
variable v;
Select v such that Calls*("B", "G")
none
5000
14 - Calls* syntax, LHS Ident RHS invalid Ident
constant c;
Select c such that Calls*("I", "F")
none
5000
15 - Calls* syntax, LHS invalid Ident RHS invalid Ident
while w;
Select w such that Calls*("F", "J")
none
5000
16 - Set 2 - Test direct and indirect calls*. Calls* directness, Direct true 1
constant c;
Select c such that Calls*("A", "B")
1
5000
17 - Calls* directness, Direct true 2
constant c;
Select c such that Calls*("C", "E")
1
5000
18 - Calls* directness, Direct true 3
procedure pr;
Select pr such that Calls*("J", "H")
A, B, C, D, E, F, G, H, I, J
5000
19 - Calls* directness, Direct false 1
procedure pr;
Select pr such that Calls*("A", "C")
none
5000
20 - Calls* directness, Direct false 2
assign a;
Select a such that Calls*("B", "A")
none
5000
21 - Calls* directness, Direct false 3
assign a;
Select a such that Calls*("E", "E")
none
5000
22 - Calls* directness, Indirect true 1
print pn;
Select pn such that Calls*("C", "G")
3, 6, 9, 11, 17, 22, 24, 25, 35, 38, 41, 46
5000
23 - Calls* directness, Indirect true 2
read r;
Select r such that Calls*("I", "E")
2, 4, 12, 13, 18, 30, 44, 45
5000
24 - Calls* directness, Indirect true 3
stmt s;
Select s such that Calls*("D", "G")
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47
5000
25 - Calls* directness, Indirect false 1
assign a;
Select a such that Calls*("C", "I")
none
5000
26 - Calls* directness, Indirect false 2
assign a;
Select a such that Calls*("G", "D")
none
5000
27 - Calls* directness, Indirect false 3
assign a;
Select a such that Calls*("H", "B")
none
5000
28 - Set 3 - Test calls* at different nesting. Calls* nesting, In if 1
procedure pr;
Select pr such that Calls*("C", "D")
A, B, C, D, E, F, G, H, I, J
5000
29 - Calls* nesting, In if 2
procedure pr;
Select pr such that Calls*("C", "E")
A, B, C, D, E, F, G, H, I, J
5000
30 - Calls* nesting, In while 1
procedure pr;
Select pr such that Calls*("D", "E")
A, B, C, D, E, F, G, H, I, J
5000
31 - Calls* nesting, In while 2
procedure pr;
Select pr such that Calls*("I", "H")
A, B, C, D, E, F, G, H, I, J
5000
32 - Calls* nesting, In multiple nested 1
constant c;
Select c such that Calls*("E", "G")
1
5000
33 - Calls* nesting, In multiple nested 2
constant c;
Select c such that Calls*("H", "G")
1
5000
34 - Set 4 - Relation tests for calls*. Relation, Calls* itself
procedure pr;
Select pr such that Calls*(pr, pr)
none
5000
35 - Relation, Calls* non-existent
procedure pr;
Select pr such that Calls*(pr, "N")
none
5000
36 - Relation, Called by non-existent
procedure pr;
Select pr such that Calls*("P", pr)
none
5000
37 - Relation, Reverse calls*
variable v;
Select v such that Calls*("G", "I")
none
5000
38 - Relation, Select all caller
procedure pr, pr1;
Select pr such that Calls*(pr, pr1)
A, C, D, E, H, I, J
5000
39 - Relation, Select all callee
procedure pr, pr1;
Select pr1 such that Calls*(pr, pr1)
B, D, E, G, H
5000
40 - Relation, Select all callee of a specific caller 1
procedure pr;
Select pr such that Calls*("I", pr)
H, E, G
5000
41 - Relation, Select all callee of a specific caller 2
procedure pr;
Select pr such that Calls*("C", pr)
D, E, G
5000
42 - Relation, Select all caller of a specific callee 1
procedure pr;
Select pr such that Calls*(pr, "E")
C, D, H, I, J
5000
43 - Relation, Select all caller of a specific callee 2
procedure pr;
Select pr such that Calls*(pr, "G")
C, D, E, H, I, J
5000
44 - Relation, Select result not related
constant c; procedure pr;
Select c such that Calls*("A", pr)
1
5000
45 - Relation, Select all callee of a procedure that does not call 1
procedure pr;
Select pr such that Calls*("B", pr)
none
5000
46 - Relation, Select all callee of a procedure that does not call 2
procedure pr;
Select pr such that Calls*("F", pr)
none
5000
47 - Relation, Select all caller of a procedure that is not called 1
procedure pr;
Select pr such that Calls*(pr, "J")
none
5000
48 - Relation, Select all caller of a procedure that is not called 2
procedure pr;
Select pr such that Calls*(pr, "F")
none
5000